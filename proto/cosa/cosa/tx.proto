syntax = "proto3";

package cosa.cosa;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "cosa/cosa/params.proto";

option go_package = "cosa/x/cosa/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams   (MsgUpdateParams  ) returns (MsgUpdateParamsResponse  );
  rpc CreateAuction  (MsgCreateAuction ) returns (MsgCreateAuctionResponse );
  rpc ApproveAuction (MsgApproveAuction) returns (MsgApproveAuctionResponse);
  rpc CreatBid       (MsgCreatBid      ) returns (MsgCreatBidResponse      );
  rpc CloseAuction   (MsgCloseAuction  ) returns (MsgCloseAuctionResponse  );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                   "authority";
  option           (amino.name) = "cosa/x/cosa/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateAuction {
  option (cosmos.msg.v1.signer) = "creator";
  string creator       = 1;
  string item          = 2;
  uint64 startingPrice = 3;
  uint64 duration      = 4;
  string status        = 5;
}

message MsgCreateAuctionResponse {
  uint64 id = 1;
}

message MsgApproveAuction {
  option (cosmos.msg.v1.signer) = "creator";
  string creator       = 1;
  string item          = 2;
  uint64 id            = 3;
  uint64 startingPrice = 4;
}

message MsgApproveAuctionResponse {
  string status = 1;
}

message MsgCreatBid {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  string item      = 2;
  uint64 auctionId = 3;
  uint64 bidAmount = 4;
  string bidder    = 5;
}

message MsgCreatBidResponse {
  uint64 id = 1;
}

message MsgCloseAuction {
  option (cosmos.msg.v1.signer) = "creator";
  string creator    = 1;
  uint64 id         = 2;
  uint64 highestBid = 3;
}

message MsgCloseAuctionResponse {
  string winner     = 1;
  uint64 highestBid = 2;
}

